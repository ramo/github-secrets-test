name: Write Secrets
on:
  workflow_dispatch:
    inputs:
      key:
        description: key
        type: string
        required: true
      value:
        description: value
        type: string
        required: true
      secret:
        description: secret
        type: boolean
        required: false
        default: false
jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Setup nodeJS
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Install libsodium-wrappers
        run: |
          npm i libsodium-wrappers
      - name: Write to GitHub secrets/vars
        uses: actions/github-script@v7
        with:
          result-encoding: string
          retries: 3
          github-token: ${{ secrets.MY_PAT }}
          script: |
            if (${{ inputs.secret }}) {
                const envPublicKey = await github.rest.actions.getEnvironmentPublicKey({
                    repository_id: context.payload.repository.id,
                    environment_name: 'dev'
                })
                console.log(envPublicKey)
                const sodium = require('libsodium-wrappers')

                const secret = '${{ inputs.value }}'
                const key = envPublicKey.key
                
                //Check if libsodium is ready and then proceed.
                sodium.ready.then(() => {
                  // Convert the secret and key to a Uint8Array.
                  let binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL)
                  console.log(`binkey = ${binkey}`)
                  let binsec = sodium.from_string(secret)
                  console.log(`binsec = ${binsec}`)
                  
                  
                  // Encrypt the secret using libsodium
                  let encBytes = sodium.crypto_box_seal(binsec, binkey)
                  console.log(`encBytes = ${encBytes}`)
                  
                  // Convert the encrypted Uint8Array to Base64
                  let output = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)
                  console.log(`output = ${output}`)
                
                  github.rest.actions.createOrUpdateEnvironmentSecret({
                    repository_id: context.payload.repository.id,
                    environment_name: 'dev',
                    secret_name: '${{ inputs.key }}',
                    encrypted_value: output,
                    key_id: envPublicKey.key_id,
                  });                
                });
            } else {
                github.rest.actions.createEnvironmentVariable({
                    repository_id: context.payload.repository.id,
                    environment_name: 'dev',
                    name: '${{ inputs.key }}',
                    value: '${{ inputs.value }}'
                });
            }
