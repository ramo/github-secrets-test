name: Print Secrets
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      keys: ${{ steps.secrets-vars.outputs.keys }}
    steps:
      - name: Filter keys of secrets and vars
        id: secrets-vars
        run: |
          secret_keys=$(jq 'keys | map(select(. | startswith("${{ vars.APP_VAR_PREFIX }}"))) | map({name: ., secret: true})' <<< '${{ toJSON(secrets) }}')
          var_keys=$(jq 'keys | map(select(. | startswith("${{ vars.APP_VAR_PREFIX }}"))) | map({name: ., secret: false})' <<< '${{ toJSON(vars) }}')
          keys=$(jq -s '.[0] + .[1]' <<< "$secret_keys $var_keys")
          echo $keys
          echo 'keys<<EOF' >> $GITHUB_OUTPUT
          echo "$keys" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
  print:
      needs: [ build ]
      name: ${{ matrix.keys.name }}
      runs-on: ubuntu-latest
      strategy: 
        matrix:
          keys: ${{ fromJSON(needs.build.outputs.keys) }}
      steps:
        - name: process the key
          id: convert_key
          run: echo "key=$(echo '${{ matrix.keys.name }}' | sed 's/${{vars.APP_VAR_PREFIX}}//' | sed 's/_/-/g')" >> $GITHUB_OUTPUT
        - name: Get value from secrets
          if: ${{ matrix.keys.secret }}
          run: echo "VALUE=${{ secrets[matrix.keys.name ]}}" >> $GITHUB_ENV
        - name: Get value from vars
          if: ${{ ! matrix.keys.secret }}
          run: echo "VALUE=${{ vars[matrix.keys.name ]}}" >> $GITHUB_ENV
        - name: Printing key value
          run: |
            echo 'KEY = ${{ steps.convert_key.outputs.key }}'
            echo 'VALUE = ${{ env.VALUE }}'
